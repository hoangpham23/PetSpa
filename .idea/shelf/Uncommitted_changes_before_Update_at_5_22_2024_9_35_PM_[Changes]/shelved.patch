Index: src/main/java/com/team/model/Customer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/team/model/Customer.java b/src/main/java/com/team/model/Customers.java
rename from src/main/java/com/team/model/Customer.java
rename to src/main/java/com/team/model/Customers.java
--- a/src/main/java/com/team/model/Customer.java	(revision a98cc1a104cfdb22770f37f5d11708725ea0bbfa)
+++ b/src/main/java/com/team/model/Customers.java	(date 1716388120892)
@@ -11,7 +11,7 @@
 @NoArgsConstructor
 @AllArgsConstructor
 @Table(name = "CUSTOMERS")
-public class Customer {
+public class Customers {
 
     @Id
     private int customerID;
Index: src/main/java/com/team/repository/AccountRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team.repository;\r\n\r\nimport com.team.model.Account;\r\nimport org.springframework.data.repository.ListCrudRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n\r\n@Repository\r\npublic interface AccountRepository extends ListCrudRepository<Account, Integer> {\r\n\r\n    Account findAccountByEmailAndPassword(String email, String password);\r\n    boolean existsAccountByEmail(String email);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/team/repository/AccountRepository.java b/src/main/java/com/team/repository/AccountRepository.java
--- a/src/main/java/com/team/repository/AccountRepository.java	(revision a98cc1a104cfdb22770f37f5d11708725ea0bbfa)
+++ b/src/main/java/com/team/repository/AccountRepository.java	(date 1716388120879)
@@ -1,13 +1,13 @@
 package com.team.repository;
 
-import com.team.model.Account;
+import com.team.model.Accoounts;
 import org.springframework.data.repository.ListCrudRepository;
 import org.springframework.stereotype.Repository;
 
 
 @Repository
-public interface AccountRepository extends ListCrudRepository<Account, Integer> {
+public interface AccountRepository extends ListCrudRepository<Accoounts, Integer> {
 
-    Account findAccountByEmailAndPassword(String email, String password);
+    Accoounts findAccountByEmailAndPassword(String email, String password);
     boolean existsAccountByEmail(String email);
 }
Index: src/main/java/com/team/controller/SignUpController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team.controller;\r\n\r\n\r\nimport com.team.model.Account;\r\nimport com.team.model.Customer;\r\nimport com.team.service.AccountService;\r\nimport com.team.service.CustomerService;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n@RestController\r\n@RequestMapping(\"/sign-up\")\r\npublic class SignUpController {\r\n\r\n    private CustomerService customerService;\r\n    private AccountService accountService;\r\n\r\n    public SignUpController(CustomerService customerService, AccountService accountService) {\r\n        this.customerService = customerService;\r\n        this.accountService = accountService;\r\n    }\r\n\r\n\r\n    @PostMapping(\"\")\r\n    public ResponseEntity<?> signUp(\r\n            @RequestParam String customerName,\r\n            @RequestParam String password,\r\n            @RequestParam String phoneNumber,\r\n            @RequestParam String email)\r\n    {\r\n        if (accountService.checkEmail(email)){\r\n            return ResponseEntity.status(HttpStatus.CONFLICT).body(\"Email is already in use\");\r\n        }\r\n        accountService.createAccount(email, password);\r\n        int customerId = accountService.findAccountID(email, password).getAccountID();\r\n\r\n        Customer customer = customerService.createCustomer(customerId, customerName, phoneNumber, email);\r\n        return ResponseEntity.status(HttpStatus.CREATED).body(customer);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/team/controller/SignUpController.java b/src/main/java/com/team/controller/SignUpController.java
--- a/src/main/java/com/team/controller/SignUpController.java	(revision a98cc1a104cfdb22770f37f5d11708725ea0bbfa)
+++ b/src/main/java/com/team/controller/SignUpController.java	(date 1716388120872)
@@ -1,13 +1,11 @@
 package com.team.controller;
 
 
-import com.team.model.Account;
-import com.team.model.Customer;
+import com.team.model.Customers;
 import com.team.service.AccountService;
 import com.team.service.CustomerService;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
-import org.springframework.stereotype.Service;
 import org.springframework.web.bind.annotation.*;
 
 @RestController
@@ -36,8 +34,8 @@
         accountService.createAccount(email, password);
         int customerId = accountService.findAccountID(email, password).getAccountID();
 
-        Customer customer = customerService.createCustomer(customerId, customerName, phoneNumber, email);
-        return ResponseEntity.status(HttpStatus.CREATED).body(customer);
+        Customers customers = customerService.createCustomer(customerId, customerName, phoneNumber, email);
+        return ResponseEntity.status(HttpStatus.CREATED).body(customers);
     }
 
 }
Index: src/main/java/com/team/controller/SignInController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team.controller;\r\n\r\nimport com.team.model.Account;\r\nimport com.team.service.AccountService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n\r\n@RestController\r\n@RequestMapping(\"/sign-in\")\r\npublic class SignInController {\r\n\r\n    private AccountService accountService;\r\n    ;\r\n\r\n    public SignInController(AccountService accountService) {\r\n        this.accountService = accountService;\r\n    }\r\n\r\n    @PostMapping(\"\")\r\n    public ResponseEntity<?> login(@RequestParam String email, @RequestParam String password, HttpServletRequest request) {\r\n        Account account = accountService.checkLogin(email, password);\r\n        if (account != null) {\r\n            return ResponseEntity.ok().body(account);\r\n        }\r\n\r\n        return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(\"Invalid email or password\");\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/team/controller/SignInController.java b/src/main/java/com/team/controller/SignInController.java
--- a/src/main/java/com/team/controller/SignInController.java	(revision a98cc1a104cfdb22770f37f5d11708725ea0bbfa)
+++ b/src/main/java/com/team/controller/SignInController.java	(date 1716388120875)
@@ -1,6 +1,6 @@
 package com.team.controller;
 
-import com.team.model.Account;
+import com.team.model.Accoounts;
 import com.team.service.AccountService;
 import jakarta.servlet.http.HttpServletRequest;
 import org.springframework.http.HttpStatus;
@@ -24,9 +24,9 @@
 
     @PostMapping("")
     public ResponseEntity<?> login(@RequestParam String email, @RequestParam String password, HttpServletRequest request) {
-        Account account = accountService.checkLogin(email, password);
-        if (account != null) {
-            return ResponseEntity.ok().body(account);
+        Accoounts accoounts = accountService.checkLogin(email, password);
+        if (accoounts != null) {
+            return ResponseEntity.ok().body(accoounts);
         }
 
         return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Invalid email or password");
Index: src/main/java/com/team/model/Account.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/team/model/Account.java b/src/main/java/com/team/model/Accoounts.java
rename from src/main/java/com/team/model/Account.java
rename to src/main/java/com/team/model/Accoounts.java
--- a/src/main/java/com/team/model/Account.java	(revision a98cc1a104cfdb22770f37f5d11708725ea0bbfa)
+++ b/src/main/java/com/team/model/Accoounts.java	(date 1716388120882)
@@ -6,14 +6,12 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-import java.security.PrivateKey;
-
 @Entity
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @Table(name = "ACCOUNTS")
-public class Account {
+public class Accoounts {
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     private int accountID;
Index: src/main/java/com/team/service/CustomerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team.service;\r\n\r\n\r\nimport com.team.model.Customer;\r\nimport com.team.repository.CustomerRepository;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Transactional;\r\n\r\nimport java.util.Optional;\r\n\r\n@Service\r\npublic class CustomerService {\r\n\r\n    private CustomerRepository customerRepository;\r\n    public CustomerService(CustomerRepository customerRepository) {\r\n        this.customerRepository = customerRepository;\r\n    }\r\n\r\n//    public Customer getCustomer(int accountID){\r\n//        return customerRepository.findCustomerByAccountID(accountID);\r\n//    }\r\n\r\n    public Customer createCustomer(int customerID, String customerName, String phoneNumber, String email){\r\n        Customer customer = new Customer();\r\n        customer.setCustomerID(customerID);\r\n        customer.setCustomerName(customerName);\r\n        customer.setPhoneNumber(phoneNumber);\r\n        customer.setEmail(email);\r\n        return customerRepository.save(customer);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/team/service/CustomerService.java b/src/main/java/com/team/service/CustomerService.java
--- a/src/main/java/com/team/service/CustomerService.java	(revision a98cc1a104cfdb22770f37f5d11708725ea0bbfa)
+++ b/src/main/java/com/team/service/CustomerService.java	(date 1716388120867)
@@ -1,12 +1,9 @@
 package com.team.service;
 
 
-import com.team.model.Customer;
+import com.team.model.Customers;
 import com.team.repository.CustomerRepository;
 import org.springframework.stereotype.Service;
-import org.springframework.transaction.annotation.Transactional;
-
-import java.util.Optional;
 
 @Service
 public class CustomerService {
@@ -20,13 +17,13 @@
 //        return customerRepository.findCustomerByAccountID(accountID);
 //    }
 
-    public Customer createCustomer(int customerID, String customerName, String phoneNumber, String email){
-        Customer customer = new Customer();
-        customer.setCustomerID(customerID);
-        customer.setCustomerName(customerName);
-        customer.setPhoneNumber(phoneNumber);
-        customer.setEmail(email);
-        return customerRepository.save(customer);
+    public Customers createCustomer(int customerID, String customerName, String phoneNumber, String email){
+        Customers customers = new Customers();
+        customers.setCustomerID(customerID);
+        customers.setCustomerName(customerName);
+        customers.setPhoneNumber(phoneNumber);
+        customers.setEmail(email);
+        return customerRepository.save(customers);
     }
 
 
Index: src/main/java/com/team/service/AccountService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team.service;\r\n\r\n\r\nimport com.team.model.Account;\r\nimport com.team.repository.AccountRepository;\r\nimport org.apache.catalina.User;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\npublic class AccountService {\r\n\r\n    private AccountRepository accountRepository ;\r\n\r\n\r\n    public AccountService(AccountRepository accountRepository) {\r\n        this.accountRepository = accountRepository;\r\n    }\r\n\r\n    public Account checkLogin(String email, String password) {\r\n        return accountRepository.findAccountByEmailAndPassword(email, password);\r\n    }\r\n\r\n    public Account findAccountID(String email, String password) {\r\n        return accountRepository.findAccountByEmailAndPassword(email,password);\r\n    }\r\n\r\n    public boolean checkEmail(String email) {\r\n        return accountRepository.existsAccountByEmail(email);\r\n    }\r\n\r\n    public void createAccount(String email, String password) {\r\n        Account account = new Account();\r\n        account.setEmail(email);\r\n        account.setPassword(password);\r\n        account.setRole(\"CUS\");\r\n        accountRepository.save(account);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/team/service/AccountService.java b/src/main/java/com/team/service/AccountService.java
--- a/src/main/java/com/team/service/AccountService.java	(revision a98cc1a104cfdb22770f37f5d11708725ea0bbfa)
+++ b/src/main/java/com/team/service/AccountService.java	(date 1716388120886)
@@ -1,9 +1,8 @@
 package com.team.service;
 
 
-import com.team.model.Account;
+import com.team.model.Accoounts;
 import com.team.repository.AccountRepository;
-import org.apache.catalina.User;
 import org.springframework.stereotype.Service;
 
 @Service
@@ -16,11 +15,11 @@
         this.accountRepository = accountRepository;
     }
 
-    public Account checkLogin(String email, String password) {
+    public Accoounts checkLogin(String email, String password) {
         return accountRepository.findAccountByEmailAndPassword(email, password);
     }
 
-    public Account findAccountID(String email, String password) {
+    public Accoounts findAccountID(String email, String password) {
         return accountRepository.findAccountByEmailAndPassword(email,password);
     }
 
@@ -29,11 +28,11 @@
     }
 
     public void createAccount(String email, String password) {
-        Account account = new Account();
-        account.setEmail(email);
-        account.setPassword(password);
-        account.setRole("CUS");
-        accountRepository.save(account);
+        Accoounts accoounts = new Accoounts();
+        accoounts.setEmail(email);
+        accoounts.setPassword(password);
+        accoounts.setRole("CUS");
+        accountRepository.save(accoounts);
     }
 
 }
Index: src/main/java/com/team/repository/CustomerRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team.repository;\r\n\r\nimport com.team.model.Customer;\r\nimport org.springframework.data.repository.ListCrudRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n@Repository\r\npublic interface CustomerRepository extends ListCrudRepository<Customer, Integer> {\r\n//    Customer findCustomerByAccountID(int accountID);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/team/repository/CustomerRepository.java b/src/main/java/com/team/repository/CustomerRepository.java
--- a/src/main/java/com/team/repository/CustomerRepository.java	(revision a98cc1a104cfdb22770f37f5d11708725ea0bbfa)
+++ b/src/main/java/com/team/repository/CustomerRepository.java	(date 1716388120897)
@@ -1,10 +1,10 @@
 package com.team.repository;
 
-import com.team.model.Customer;
+import com.team.model.Customers;
 import org.springframework.data.repository.ListCrudRepository;
 import org.springframework.stereotype.Repository;
 
 @Repository
-public interface CustomerRepository extends ListCrudRepository<Customer, Integer> {
+public interface CustomerRepository extends ListCrudRepository<Customers, Integer> {
 //    Customer findCustomerByAccountID(int accountID);
 }
